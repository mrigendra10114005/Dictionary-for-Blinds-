----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    19:23:50 11/24/2016 
-- Design Name: 
-- Module Name:    comparator - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity comparator is
    Port ( A : in  std_logic_vector(3 downto 0);
           B : in  std_logic_vector(3 downto 0);
           x : out  STD_LOGIC;
           y : out  STD_LOGIC;
           z : out  STD_LOGIC);
end comparator;

architecture Behavioral of comparator is
signal s: std_logic_vector(3 downto 0);
begin
s(0) <= ((A(0) and B(0)) or((not A(0)) and (not B(0))));
s(1) <= ((A(1) and B(1)) or((not A(1)) and (not B(1))));
s(2) <= ((A(2) and B(2)) or((not A(2)) and (not B(2))));
s(3) <= ((A(3) and B(3)) or((not A(3)) and (not B(3))));
x <= (s(0) and s(1) and s(2) and s(3));
y <= ((A(3) and (not B(3))) or (s(3) and A(2) and (not B(2))) or (s(3) and s(2) and A(1) and (not B(1))) or (s(3) and s(2) and s(1) and A(0) and (not B(0))));
z <= ((B(3) and (not A(3))) or (s(3) and B(2) and (not A(2))) or (s(3) and s(2) and B(1) and (not A(1))) or (s(3) and s(2) and s(1) and B(0) and (not A(0))));
end Behavioral;

